#!/usr/bin/perl
#
use strict;
use warnings;
use Carp;
use Config::IniFiles;
use Data::Dumper;
use Getopt::Std;
use Fcntl qw( :DEFAULT :seek );
use lib qw( ../lib );
use adar;

=pod

=head2 DB descriptor from DDM

    %dbdesc = {
        ddm => 'dummy.ddm',
        files => {
            'FILE1' => { fdt => 'dummy1.fdt', bin_file => 'dummy1.bin' },
            'FILE2' => { fdt => 'dummy2.fdt', bin_file => 'dummy2.bin' },
        },
        fields => {
            count => 123,
            1 => { name => AA, 'type' => 'S', comment => '...', },
            2 => { name => AB, 'type' => 'K', comment => '...', },
        },
    };

=cut

our $DEBUG = 0;
my ( $DUMP_DDM, $DUMP_FDT, $DUMP_PNT, $DUMP_BIN);

sub usage {
    print << "EOF";
$0 - Dump PET/ETKA files, supposed to be in an Adabas-ish file format.

Options :
  -h : help
  -D : dump DDM file
  -F : dump FDT file
  -P : dump PNT file
  -B : dump BIN file

EOF

    return 0;
}

my %opt;
getopts('dPFDBh', \%opt);

$DEBUG = 1 if defined $opt{d};
$DUMP_PNT = 1 if defined $opt{P};
$DUMP_FDT = 1 if defined $opt{F};
$DUMP_DDM = 1 if defined $opt{D};
$DUMP_BIN = 1 if defined $opt{B};

if (defined $opt{h}) {
    usage;
    exit 0;
}

my $f = shift @ARGV;

# First, open .ddm file
my $dbdesc = ddm_read($f);

ddm_dump($dbdesc) if $DUMP_DDM;
fdt_load($dbdesc);
fdt_dump($dbdesc) if $DUMP_FDT;
pnt_load($dbdesc);
pnt_dump($dbdesc) if $DUMP_PNT;
bin_dump($dbdesc) if $DUMP_BIN;

