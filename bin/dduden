#!/usr/bin/perl
#
use strict;
use warnings;
use Carp;
use Config::IniFiles;
use Data::Dumper;
use Getopt::Std;
use Fcntl qw( :DEFAULT :seek );
use lib qw(../lib);
use adar;

=pod

=head2 DB descriptor from DDM

    %dbdesc = {
        ddm => 'dummy.ddm',
        files => {
            'FILE1' => { fdt => 'dummy1.fdt', bin_file => 'dummy1.bin' },
            'FILE2' => { fdt => 'dummy2.fdt', bin_file => 'dummy2.bin' },
        },
        fields => {
            count => 123,
            1 => { name => AA, 'type' => 'S', comment => '...', },
            2 => { name => AB, 'type' => 'K', comment => '...', },
        },
    };

=cut

our $DEBUG = 0;
my ( $DUMP_DDM, $DUMP_FDT, $DUMP_PNT, $DUMP_BIN);

sub usage {
    print << "EOF";
$0 - Dump Duden files

Options :
  -h : help
  -D : dump DDM file
  -F : dump FDT file
  -P : dump PNT file
  -B : dump BIN file

EOF

    return 0;
}

my %opt;
getopts('dPFDBh', \%opt);

my $filename = 'Duden_F';

my $dbdesc = ddm_read $filename;
fdt_load $dbdesc;
pnt_load $dbdesc;
open my $fh, '<', $filename . '.bin';
binmode $fh;

# loop through files
foreach my $file (keys %{$dbdesc->{files} }) {
    # loop through index
    foreach my $key ( sort { $dbdesc->{files}->{$file}->{pnt}->{$a} <=> $dbdesc->{files}->{$file}->{pnt}->{$b} } keys %{$dbdesc->{files}->{$file}->{pnt}} ) {

        my $pos = $dbdesc->{files}->{$file}->{pnt}->{$key};

        seek $fh, $pos, SEEK_SET;

        my $reclen = read_u16le($fh);
        print "Record length: $reclen";

        printf "\npos: $pos (%06x), key: $key ", $pos;
        my $c1 = read_u8($fh);       # groupe ?
        my $c2 = read_u8($fh);       # groupe ?
        print "\nCount? : $c1 $c2";
        print "\nAA: " . read_u32le($fh);  # AA D4
        print "\nAB: " . read_u8($fh);     # AB K1
        print "\nAC: " . read_lkstring($fh);  # AC S10
        print "\nnr : " . read_u8($fh); # nr de groupe ?
        print "\nAD: " . read_lkstring($fh);  # AD S86
        while (tell($fh) < $pos + $reclen - 1) {
            print "\nAE: " . read_lkstring($fh);  # AD S86
        }
        print "\n";
        print "\n" . '-' x 60 . "\n";
    }
}
